age,
country,
ground_truth_category,
predicted_category,
text,
valency,
dominance,
arousal)
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=dominance), size =0.1, color = "antiquewhite4")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=dominance),method = "lm", formula = y ~ x, size = 1)
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "antiquewhite4")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1)
# vad_data <- read_csv(urlfile2)
vad_data = data.frame(vad_data)
vad_data = cbind(vad_data[,1:2],vad_data$arousal,vad_data$dominance)
vad_ori = stats::na.omit(vad_data)
vad = vad_ori
vad[,2:4]= scale(vad_ori[,2:4])
# Determine number of clusters
hmid_vad = vad[,1]
va = vad[,2:3]
# K-Means Cluster Analysis
set.seed(1)
fit <- kmeans(va, 3) # 3 cluster solution
km_vad <- data.frame(vad_ori, fit$cluster)
names(km_vad)[3:5] = c("arousal","dominance","subjective_group")
km_vad[which(km_vad[,5]==2),5]=0
km_vad[which(km_vad[,5]==1),5]=2
km_vad[which(km_vad[,5]==0),5]=1
km_vad$subjective_group = as.factor(km_vad$subjective_group)
# head(va)
# plot(km_vad[,2:3], col = km_vad$cluster)
ggplot(data = km_vad,aes(x=valency,y=arousal))+
geom_point()+
geom_point(aes(colour = subjective_group))
# km_vad
# vad_age = data.frame(hm_data)[,-c(13,14,15)]%>%
#   inner_join(km_vad, by="hmid")%>%
#   select(hmid,
#          age,
#          valency,
#          arousal,
#          dominance,
#          subjective_group)
# vad_age$age = as.numeric(vad_age$age)
# vad_age = stats::na.omit(vad_age)
# vad_age = vad_age[vad_age$age < 100,]
cat_vad = hm_data%>%
inner_join(km_vad, by="hmid")%>%
select(hmid,
predicted_category,
subjective_group)
cat_vad_cnt = data.frame(cat_vad%>%
group_by(subjective_group)%>%
dplyr::count(predicted_category))
cat_vad_cnt[,1]=factor(cat_vad_cnt[,1])
head(cat_vad_cnt)
cnt_lst = split(cat_vad_cnt, f=cat_vad_cnt$subjective_group)
cnt_lst
cnt_df = NULL
for(i in 1:3){
cnt_lst[[i]]$proportion = round(cnt_lst[[i]]$n/sum(cnt_lst[[i]]$n),4)
cnt_lst[[i]] = cnt_lst[[i]][,-3]
names(cnt_lst[[i]])[1]="group"
cnt_df = rbind(cnt_df, cnt_lst[[i]])
}
cnt_df$predicted_category = factor(cnt_df$predicted_category, levels = rev(c("achievement", "affection", "bonding", "enjoy_the_moment","leisure","nature","exercise")))
ggplot(data = cnt_df, aes(x=predicted_category,y=proportion,fill=group))+
geom_bar(stat = "identity")+
facet_wrap(as.formula("~group"), ncol = 3)+
coord_flip()+
labs(title = "Proportion of Categories in Each Group", x = "Predicted Category", y = "Proportion")
vad_bag = data.frame(bag_of_words)%>%
inner_join(km_vad, by = "hmid")%>%
select(hmid, word, subjective_group)
wc_vad = data.frame(vad_bag%>%
group_by(subjective_group)%>%
dplyr::count(word))
wc_vad_lists = pre_split(wc_vad)
high_val=  head(hm_data[order(hm_data$valency,decreasing = TRUE),]$original_hm,5)
high_val
#real happiness
low_aro = head(hm_data[order(hm_data$arousal,decreasing = FALSE),]$original_hm,5)
low_aro
low_val = head(hm_data[order(hm_data$valency,decreasing = FALSE),]$original_hm,5)
low_val
# happiness arise from pain
?wordcloud2
head(word_count)
#produce a word cloud
set.seed(1)
wordcloud2(data = word_count[1:100,], shape = 'star', size = 0.6, backgroundColor = "lightsalmon" )
setwd("~/GitHub/Fall2018-Proj1-JudyCom/figs")
#bar chart: comparison of proportion of categories in each subjective group
cat_vad = hm_data%>%
inner_join(km_vad, by="hmid")%>%
select(hmid,
predicted_category,
subjective_group)
cat_vad_cnt = data.frame(cat_vad%>%
group_by(subjective_group)%>%
dplyr::count(predicted_category))
cat_vad_cnt[,1]=factor(cat_vad_cnt[,1])
cnt_lst = split(cat_vad_cnt, f=cat_vad_cnt$subjective_group)
cnt_df = NULL
for(i in 1:3){
cnt_lst[[i]]$proportion = round(cnt_lst[[i]]$n/sum(cnt_lst[[i]]$n),4)
cnt_lst[[i]] = cnt_lst[[i]][,-3]
names(cnt_lst[[i]])[1]="group"
cnt_df = rbind(cnt_df, cnt_lst[[i]])
}
cnt_df$predicted_category = factor(cnt_df$predicted_category, levels = rev(c("achievement", "affection", "bonding", "enjoy_the_moment","leisure","nature","exercise")))
ggplot(data = cnt_df, aes(x=predicted_category,y=proportion,fill=group))+
geom_bar(stat = "identity")+
facet_wrap(as.formula("~group"), ncol = 3)+
coord_flip()+
labs(title = "Proportion of Categories in Each Group", x = "Predicted Category", y = "Proportion")
# scatter plot of arousal against valency and the regression fitting curve
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "red")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1, color = "white")
# scatter plot of arousal against valency and the regression fitting curve
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "red")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1, color = "black")
?ggarrange
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)+
labs(title = "Comparison of Frequency of Predicted Category")
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)+labs(title = "Comparison of Frequency of Predicted Category")
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
# theme(axis.text.x = element_text(angle = 60, hjust = 1))+
coord_flip()+
labs(title = "Comparison of Frequency of Predicted Category")
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar charts: comparisons of category frequency in different groups
atrs <- c("gender", "marital", "parenthood", "reflection_period")
temp0 = list()
sql_cat = list()
for (i in 1:length(atrs)){
sql_cat[[i]] = pred_cat%>%
dplyr::count(!!as.symbol(atrs[i]),predicted_category)%>%
group_by(!!as.symbol(atrs[i]),predicted_category)
}
sql_cat[[5]] = pred_cat%>%
dplyr::count(country,predicted_category)%>%
group_by(country,predicted_category)%>%
filter(country %in% c("USA","IND"))
atrs[5]="country"
names(sql_cat)=atrs
divi <-function(vec,df){
vec1 = as.vector(vec)
if (as.character(vec1[1])==as.character(df[1,1])){
vec1[3]=as.numeric(vec1[3])/as.numeric(df[1,2])
}
else{
vec1[3]=as.numeric(vec1[3])/as.numeric(df[2,2])
}
return(vec1[3])
}
cnt_to_prop<-function(df){
df = data.frame(df)
df_sum = df%>%
group_by(!!as.symbol(names(df)[1]))%>%
dplyr::summarise(total = sum(n, na.rm = TRUE))
df_sum = data.frame(df_sum)
props = round(as.numeric(apply(df,1,divi,df_sum)),digits = 4)
df[,3] = props
names(df)[3]="proportion"
return(df)
}
gen = data.frame(sql_cat[[1]])
#try
ttt = data.frame(data.frame(sql_cat[[1]])%>%
group_by(gender)%>%
dplyr::summarise(total = sum(n)))
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
# theme(axis.text.x = element_text(angle = 60, hjust = 1))+
coord_flip()
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
# combine happy moments data with vad data
hm_data <- hm_data %>%
inner_join(vad_data, by = "hmid") %>%
select(hmid,
wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text,
valency,
dominance,
arousal)
## install and load libraries
packages.used=c("tidyverse", "tidytext","DT", "scales", "wordcloud2", "gridExtra", "ngram",
"shiny", "igraph", "ggraph", "wordcloud", "RColorBrewer", "plyr", "Hmisc",
"plotrix", "ggpubr", "ggfortify")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
# load libraries
library(tidyverse)
library(tidytext)
library(DT)
library(scales)
library(wordcloud2)
library(gridExtra)
library(ngram)
library(shiny)
library(igraph)
library(ggraph)
library(wordcloud)
library(RColorBrewer)
library(plyr)
library(Hmisc)
library(plotrix)
library(ggpubr)
library(ggfortify)
# load data for use
hm_data <- read_csv("../output/processed_moments.csv")
urlfile<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/demographic.csv'
demo_data <- read_csv(urlfile)
urlfile2<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/vad.csv'
vad_data <- read_csv(urlfile2)
urladr<-'https://raw.githubusercontent.com/rit-public/HappyDB/master/happydb/data/topic_dict/'
# combine two data sets and keep the columns needed
hm_data <- hm_data %>%
inner_join(demo_data, by = "wid") %>%
select(hmid,
wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text) %>%
mutate(count = sapply(hm_data$text, wordcount)) %>%
filter(gender %in% c("m", "f")) %>%
filter(marital %in% c("single", "married")) %>%
filter(parenthood %in% c("n", "y")) %>%
filter(reflection_period %in% c("24h", "3m")) %>%
mutate(reflection_period = fct_recode(reflection_period,
months_3 = "3m", hours_24 = "24h"))
# Create a bag of words using the text data
bag_of_words <-  hm_data %>%
unnest_tokens(word, text)
word_count <- bag_of_words %>%
dplyr::count(word, sort = TRUE)
#produce a word cloud
set.seed(1)
wordcloud2(data = word_count[1:100,], shape = 'star', size = 0.6, backgroundColor = "lightsalmon" )
# plot a pie chart of predicted category frequency
pred_cat = hm_data[,c(4:7,9,11)]
pred_cat$predicted_category = factor(hm_data$predicted_category,
levels = rev(c("achievement", "affection", "bonding",
"enjoy_the_moment","leisure","nature","exercise")))
pred_cat_table = as.data.frame(sort(table(pred_cat$predicted_category), decreasing = TRUE))
names(pred_cat_table)[1]="category"
ggplot(data = pred_cat_table, aes(x=factor(1), y=Freq, fill=category))+
geom_bar(width=1, stat="identity")+
coord_polar(theta = "y")+
labs(title = "Predicted Category Frequency", x = "Category", y = "Frequency")
#bar charts: comparisons of category frequency in different groups
atrs <- c("gender", "marital", "parenthood", "reflection_period")
temp0 = list()
sql_cat = list()
for (i in 1:length(atrs)){
sql_cat[[i]] = pred_cat%>%
dplyr::count(!!as.symbol(atrs[i]),predicted_category)%>%
group_by(!!as.symbol(atrs[i]),predicted_category)
}
sql_cat[[5]] = pred_cat%>%
dplyr::count(country,predicted_category)%>%
group_by(country,predicted_category)%>%
filter(country %in% c("USA","IND"))
atrs[5]="country"
names(sql_cat)=atrs
divi <-function(vec,df){
vec1 = as.vector(vec)
if (as.character(vec1[1])==as.character(df[1,1])){
vec1[3]=as.numeric(vec1[3])/as.numeric(df[1,2])
}
else{
vec1[3]=as.numeric(vec1[3])/as.numeric(df[2,2])
}
return(vec1[3])
}
cnt_to_prop<-function(df){
df = data.frame(df)
df_sum = df%>%
group_by(!!as.symbol(names(df)[1]))%>%
dplyr::summarise(total = sum(n, na.rm = TRUE))
df_sum = data.frame(df_sum)
props = round(as.numeric(apply(df,1,divi,df_sum)),digits = 4)
df[,3] = props
names(df)[3]="proportion"
return(df)
}
gen = data.frame(sql_cat[[1]])
#try
ttt = data.frame(data.frame(sql_cat[[1]])%>%
group_by(gender)%>%
dplyr::summarise(total = sum(n)))
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
# combine happy moments data with vad data
hm_data <- hm_data %>%
inner_join(vad_data, by = "hmid") %>%
select(hmid,
wid,
original_hm,
gender,
marital,
parenthood,
reflection_period,
age,
country,
ground_truth_category,
predicted_category,
text,
valency,
dominance,
arousal)
# scatter plot of dominance against valency and the regression fitting line
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=dominance), size =0.1, color = "antiquewhite4")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=dominance),method = "lm", formula = y ~ x, size = 1)+
labs(title = "Dominance VS Valency")
# scatter plot of arousal against valency and the regression fitting curve
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "red")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1, color = "white")+
labs(title = "Arousal VS Valency")
# scatter plot of arousal against valency and the regression fitting curve
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "pink")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1, color = "white")+
labs(title = "Arousal VS Valency")
# scatter plot of arousal against valency and the regression fitting curve
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "firebrick1")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1, color = "white")+
labs(title = "Arousal VS Valency")
# scatter plot of arousal against valency and the regression fitting curve
ggplot(data=hm_data)+
geom_jitter(aes(x=valency, y=arousal), size =0.1, color = "tomato")+
stat_smooth(data=subset(hm_data, valency>4 & valency <8),aes(x=valency, y=arousal),method = "lm", formula = y ~ x + I(x^2), size = 1, color = "white")+
labs(title = "Arousal VS Valency")
?color_palette
?scale_fill_manual
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("slenna1", "slateblue4"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#F79A49", "#462DA6"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#D604FF", "#0B5E0E"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#D604FF", "#1B942F"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#FFF55F", "#1B942F"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#FFF55F", "#A5FF5F"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#FFB55F", "#A5FF5F"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#FFB55F", "#3EFF03"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#F8FF09", "#3EFF03"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#7C0EBC", "#F8FF09"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#FFA8CB", "#95F3FD"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()+
scale_fill_manual(values=c("#FCC2DD", "#95F3FD"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
bi_cat<-function(df){
df = cnt_to_prop(df)
ggplot(data=df, aes(x=!!as.symbol(names(df)[2]),y=!!as.symbol(names(df)[3])))+
geom_bar(aes(fill=!!as.symbol(names(df)[1])), position = "dodge", stat="identity")+
coord_flip()
# scale_fill_manual(values=c("#FCC2DD", "#95F3FD"))
}
cat_plt = lapply(sql_cat[1:4], FUN = bi_cat )
ggarrange(cat_plt[[1]],cat_plt[[2]], cat_plt[[3]], cat_plt[[4]], common.legend=FALSE,legend = 'right', nrow=2, ncol=2)
#bar chart: comparisons of category frequency in USA and IND
bi_cat(sql_cat[[5]])
